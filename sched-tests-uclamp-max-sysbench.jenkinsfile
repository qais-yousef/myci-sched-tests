pipeline {
	agent { label params.NODE }

	parameters {
		string(name: 'NODE', defaultValue: '', description: 'The DUT to run on. Must be Linux based DUT.')
		string(name: 'DESCRIPTION', defaultValue: '', description: 'Describe your experiment so that we have a meaningful name for this run to return to')
		string(name: 'BRANCH', defaultValue: 'main', description: 'Advanced users only. Use \'dev\' branch to test new job features.')
		string(name: 'ITERATIONS', defaultValue: '100', description: 'Number of iterations to run')
		string(name: 'DELAY', defaultValue: '0', description: 'Time in seconds to wait between each run.')
		string(name: 'NUMTHREADS', defaultValue: '1', description: 'Number of sysbench threads to use.')
	}

	stages {
		stage('Init') {
			steps {
				library "sched-tests-utils@${BRANCH}"
				set_description()
				verify_params(!env.ITERATIONS || !env.DELAY || !env.NUMTHREADS)
			}
		}
		stage('Verify') {
			steps {
				verify_linux()
			}
		}
		stage('Sysbench Idle') {
			steps {
				start_perfetto("sysbench_idle")
				sysbench(env.ITERATIONS, env.NUMTHREADS, env.DELAY, "sysbench_idle.csv")
				stop_perfetto()
			}
		}
		stage('Sysbench Youtube') {
			steps {
				start_perfetto("sysbench_youtube")
				sh "firefox -headless 'https://www.youtube.com/watch?v=vAuOfRRmtSc&t=0s' &"
				sysbench(env.ITERATIONS, env.NUMTHREADS, env.DELAY, "sysbench_youtube.csv")
				sh "pkill -u \$(whoami) GeckoMain || true"
				sh "pkill -u \$(whoami) firefox || true"
				stop_perfetto()
			}
		}
		stage('Sysbench Youtube 2 Browsers') {
			steps {
				start_perfetto("sysbench_youtube_2_browsers")
				sh "firefox -headless 'https://www.youtube.com/watch?v=vAuOfRRmtSc&t=0s' &"
				sh "chromium-browser --headless --autoplay-policy=no-user-gesture-required --remote-debugging-port=9223 'https://www.youtube.com/watch?v=vAuOfRRmtSc&t=0s' &"
				sysbench(env.ITERATIONS, env.NUMTHREADS, env.DELAY, "sysbench_youtube_2_browsers.csv")
				sh "pkill -u \$(whoami) GeckoMain || true"
				sh "pkill -u \$(whoami) firefox || true"
				sh "pkill -u \$(whoami) chromium-browse || true"
				sh "pkill -u \$(whoami) chrome || true"
				stop_perfetto()
			}
		}
		stage('Generate Result') {
			steps {
				plot_sysbench()
				plot_frequency()
			}
		}
		stage('Archive') {
			steps {
				archiveArtifacts artifacts: '*.csv', followSymlinks: false
				archiveArtifacts artifacts: '*.png', followSymlinks: false
				archiveArtifacts artifacts: '*.perfetto-trace', followSymlinks: false, allowEmptyArchive: true
			}
		}
	}
	post {
		always {
			cleanWs()
		}
	}
}

